akka {
  loglevel = INFO
  loggers = [ "akka.event.slf4j.Slf4jLogger" ]
  logger-startup-timeout = 30s
}

kamon {
  metric {
    tick-interval = 1 second
    //default-collection-context-buffer-size = 100

    filters = {
      akka-actor {
        includes = ["test/user/pinger","test/user/ponger"]
        excludes = [  ]
      }

      akka-router {
        includes = [ "*/user/tracked-*", "*/user/measuring-*", "*/user/stop-*" ]
        excludes = [ "*/user/tracked-explicitly-excluded-*"]
      }

      akka-dispatcher {
        includes = [ "**" ]
        excludes = [ "*/explicitly-excluded" ]
      }
    }

    actor-group {
      empty-group {
        includes = []
        excludes = []
      }
      all-group {
        includes = ["**"]
        excludes = []
      }
    }
  }

  default-instrument-settings {
    gauge.refresh-interval = 1 second
    min-max-counter.refresh-interval = 1 second
  }

  instrument-settings {
    akka-actor.mailbox-size.refresh-interval = 1 second
  }
}

explicitly-excluded {
  type = "Dispatcher"
  executor = "fork-join-executor"
}

tracked-fjp {
  type = "Dispatcher"
  executor = "fork-join-executor"

  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 100.0
    parallelism-max = 22
  }
}

tracked-tpe {
  type = "Dispatcher"
  executor = "thread-pool-executor"

  thread-pool-executor {
    core-pool-size-min = 7
    core-pool-size-factor = 100.0
    max-pool-size-factor  = 100.0
    max-pool-size-max = 21
    core-pool-size-max = 21
  }
}

kamon.statsd {
  # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
  # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
  hostname = "127.0.0.1"
  port = 8125

  # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
  # kamon.metrics.tick-interval setting.
  flush-interval = 1 second

  # Max packet size for UDP metrics data sent to StatsD.
  max-packet-size = 1024 bytes

  # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
  # collection for your desired entities must be activated under the kamon.metrics.filters settings.
  subscriptions {
    histogram       = [ "**" ]
    min-max-counter = [ "**" ]
    gauge           = [ "**" ]
    counter         = [ "**" ]
    trace           = [ "**" ]
    trace-segment   = [ "**" ]
    akka-actor      = [ "**" ]
    akka-dispatcher = [ "**" ]
    akka-router     = [ "**" ]
    system-metric   = [ "**" ]
    http-server     = [ "**" ]
  }

  simple-metric-key-generator {
    # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
    # this pattern:
    #    application.host.entity.entity-name.metric-name
    application = "kamon-akka"
  }
}